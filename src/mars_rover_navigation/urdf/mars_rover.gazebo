<?xml version="1.0"?>
<robot name="mars_rover" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Define inertia macros -->
  <xacro:macro name="box_inertia" params="m x y z">
    <inertia ixx="${m*(y*y+z*z)/12}" ixy="0" ixz="0"
             iyy="${m*(x*x+z*z)/12}" iyz="0"
             izz="${m*(x*x+y*y)/12}" />
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
             iyy="${m*(3*r*r+h*h)/12}" iyz="0"
             izz="${m*r*r/2}" />
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
             iyy="${2*m*r*r/5}" iyz="0"
             izz="${2*m*r*r/5}" />
  </xacro:macro>

  <!-- base_link -->
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
  </gazebo>

  <!-- right_wheel -->
  <gazebo reference="right_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- left_wheel -->
  <gazebo reference="left_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- front_caster -->
  <gazebo reference="front_caster">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <material>Gazebo/White</material>
  </gazebo>

  <!-- back_caster -->
  <gazebo reference="back_caster">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <material>Gazebo/White</material>
  </gazebo>

  <!-- camera_link -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- lidar_link -->
  <gazebo reference="lidar_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- imu_link -->
  <gazebo reference="imu_link">
    <material>Gazebo/Green</material>
  </gazebo>

  <!-- Camera plugin -->
  <gazebo reference="camera_link">
    <sensor name="camera_sensor" type="camera">
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>/mars_rover</namespace>
          <argument>camera/image_raw:=camera/image_raw</argument>
          <argument>camera/image_raw/compressed:=camera/image_raw/compressed</argument>
          <argument>camera/camera_info:=camera/camera_info</argument>
        </ros>
        <camera_name>camera</camera_name>
        <frame_name>camera_link</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- LiDAR plugin -->
  <gazebo reference="lidar_link">
    <sensor name="hokuyo" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/mars_rover</namespace>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- IMU plugin -->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>/mars_rover</namespace>
          <argument>~/out:=imu</argument>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- Differential drive plugin -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/mars_rover</namespace>
      </ros>

      <!-- wheels -->
      <left_joint>left_wheel_hinge</left_joint>
      <right_joint>right_wheel_hinge</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.95</wheel_separation>
      <wheel_diameter>0.5</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

      <!-- topic names -->
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      
      <!-- update rate -->
      <update_rate>30</update_rate>
    </plugin>
  </gazebo>

  <!-- Ground truth pose plugin -->
  <gazebo>
    <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
      <ros>
        <namespace>/mars_rover</namespace>
      </ros>
      <body_name>base_link</body_name>
      <topic_name>ground_truth_pose</topic_name>
      <gaussian_noise>0.01</gaussian_noise>
      <update_rate>30.0</update_rate>
    </plugin>
  </gazebo>

  <!-- GPS plugin for localization -->
  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <ros>
        <namespace>/mars_rover</namespace>
      </ros>
      <updateRate>40.0</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>fix</topicName>
      <velocityTopicName>fix_velocity</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>

  <!-- Contact sensor for wheel-ground interaction -->
  <gazebo reference="right_wheel">
    <sensor name="right_wheel_contact" type="contact">
      <contact>
        <collision>right_wheel_collision</collision>
      </contact>
      <plugin name="right_wheel_bumper" filename="libgazebo_ros_bumper.so">
        <ros>
          <namespace>/mars_rover</namespace>
        </ros>
        <bumper_topic_name>right_wheel_contact</bumper_topic_name>
        <frame_name>right_wheel</frame_name>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

  <gazebo reference="left_wheel">
    <sensor name="left_wheel_contact" type="contact">
      <contact>
        <collision>left_wheel_collision</collision>
      </contact>
      <plugin name="left_wheel_bumper" filename="libgazebo_ros_bumper.so">
        <ros>
          <namespace>/mars_rover</namespace>
        </ros>
        <bumper_topic_name>left_wheel_contact</bumper_topic_name>
        <frame_name>left_wheel</frame_name>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

</robot>
